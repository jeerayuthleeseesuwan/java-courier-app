package couriersystem;

import couriersystem.model.Address;
import couriersystem.model.GlobalConfig;
import couriersystem.model.LoggedInUser;
import couriersystem.model.Order;
import java.io.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jeera
 */
public class DeliveryManagement extends javax.swing.JFrame {


    private String keyId;
    private ArrayList<Order> listOfOrders;
    private ArrayList<Order> searchedListOfOrders;
    private boolean searched;
    private ArrayList<JTextField> textFields;
    
    private String packageType;
    private String modeOfTransportation;
    private double weight;
    private double length;
    private double width;
    private double height;
    private String status;
    private String staffID;

    /**
     * Creates new form AddStudentForm
     */
    public DeliveryManagement() {
        initComponents();
        //Validation: Check permission
        if (!LoggedInUser.getInstance().getPermission().allowOrderManagement()) {
            this.dispose();
        }
        setTitle("Delivery Management");
        setVisible(true);
        showOrderList();
        clearFields();
        
        //need this array for validation if it is empty
        textFields = new ArrayList<JTextField>();
        textFields.add(txtFieldWeight);
        textFields.add(txtFieldLength);
        textFields.add(txtFieldWidth);
        textFields.add(txtFieldHeight);
        textFields.add(txtFieldAddress1);
        textFields.add(txtFieldAddress2);
        textFields.add(txtFieldPostcode);
        textFields.add(txtFieldState);
        textFields.add(txtFieldCountry);
        textFields.add(txtFieldName);
        textFields.add(txtFieldContact);
        
        btnUpdate.setEnabled(false);

    }
     
    public void showOrderList (){
        listOfOrders = Order.getListOfOrders();
        if (!LoggedInUser.getInstance().getRole().equals("Admin")){
            ArrayList<Order> filtered = new ArrayList<Order>();
            //filter staff id
            for (Order ord : listOfOrders){
                if (ord.getAssignedStaffID().equals(LoggedInUser.getInstance().getUserId())){
                    filtered.add(ord);
                }
            }
            listOfOrders = filtered;
        }
        DefaultTableModel model =  (DefaultTableModel)ordersTable.getModel();
        model.setRowCount(0);
        String[] rowValues = new String[12];
        for (int i = 0; i < listOfOrders.size(); i++){
            rowValues[0] = listOfOrders.get(i).getPackageId();
            rowValues[1] = listOfOrders.get(i).getPackageType();
            rowValues[2] = String.format("%.2f",listOfOrders.get(i).getWeight());
            rowValues[3] = String.format("%.2f",listOfOrders.get(i).getLength());
            rowValues[4] = String.format("%.2f",listOfOrders.get(i).getWidth());
            rowValues[5] = String.format("%.2f",listOfOrders.get(i).getHeight());

            rowValues[6] = GlobalConfig.orderDateFormat.format(listOfOrders.get(i).getOrderDate());
            rowValues[7] = listOfOrders.get(i).getModeOfTransportation();
            rowValues[8] = listOfOrders.get(i).getShippingAddress().getFullAddress();
            
            rowValues[9] = listOfOrders.get(i).getOwner();
            rowValues[10] = listOfOrders.get(i).getOwnerContactNo();
            rowValues[11] = listOfOrders.get(i).getStatus();
            model.addRow(rowValues);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        packageTypeGroup = new javax.swing.ButtonGroup();
        modeGroup = new javax.swing.ButtonGroup();
        statusGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ordersTable = new javax.swing.JTable();
        txtSearchField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtFieldWeight = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtFieldLength = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtFieldWidth = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtFieldHeight = new javax.swing.JTextField();
        rbParcel = new javax.swing.JRadioButton();
        rbDocument = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        lblOrderDate = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rbLand = new javax.swing.JRadioButton();
        rbSea = new javax.swing.JRadioButton();
        rbAir = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel23 = new javax.swing.JLabel();
        txtFieldAddress1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtFieldAddress2 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtFieldPostcode = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtFieldState = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtFieldCountry = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtFieldContact = new javax.swing.JTextField();
        btnBack1 = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        txtFieldName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lblPackageID = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        rbProcessing = new javax.swing.JRadioButton();
        rbOutForDelivery = new javax.swing.JRadioButton();
        rbDelivered = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel9.setText("Delivery Management");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Box.png"))); // NOI18N
        jLabel3.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel3.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel3.setPreferredSize(new java.awt.Dimension(60, 60));

        ordersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Package ID", "Package Type", "Weight (kg)", "Length (cm)", "Width (cm)", "Height (cm)", "Order Date", "Mode of Transport", "Shipping Address", "Owner", "Owner Contact No.", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ordersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordersTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ordersTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1012, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel3);

        txtSearchField.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchFieldKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel10.setText("Search");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setText("Weight (kg)");

        txtFieldWeight.setEditable(false);
        txtFieldWeight.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel14.setText("Length (cm)");

        txtFieldLength.setEditable(false);
        txtFieldLength.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel15.setText("Width (cm)");

        txtFieldWidth.setEditable(false);
        txtFieldWidth.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel16.setText("Height (cm)");

        txtFieldHeight.setEditable(false);
        txtFieldHeight.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        packageTypeGroup.add(rbParcel);
        rbParcel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rbParcel.setText("Parcel");
        rbParcel.setEnabled(false);

        packageTypeGroup.add(rbDocument);
        rbDocument.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rbDocument.setText("Document");
        rbDocument.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel1.setText("Package Type");

        lblOrderDate.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblOrderDate.setText("---");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel8.setText("Package Information");

        modeGroup.add(rbLand);
        rbLand.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rbLand.setText("Through Land");
        rbLand.setEnabled(false);

        modeGroup.add(rbSea);
        rbSea.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rbSea.setText("Through Sea");
        rbSea.setEnabled(false);

        modeGroup.add(rbAir);
        rbAir.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rbAir.setText("Through Air");
        rbAir.setEnabled(false);

        jLabel23.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel23.setText("Address Line 1");

        txtFieldAddress1.setEditable(false);
        txtFieldAddress1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel24.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel24.setText("State");

        txtFieldAddress2.setEditable(false);
        txtFieldAddress2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel25.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel25.setText("Address Line 2");

        txtFieldPostcode.setEditable(false);
        txtFieldPostcode.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel26.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel26.setText("Postcode");

        txtFieldState.setEditable(false);
        txtFieldState.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel27.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel27.setText("Country");

        txtFieldCountry.setEditable(false);
        txtFieldCountry.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel17.setText("Order Information");

        jLabel18.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel18.setText("Order Date");

        jLabel19.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel19.setText("Mode Of Transportation");

        jLabel28.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel28.setText("Shipping Address");

        jLabel20.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel20.setText("Customer Information");

        jLabel21.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel21.setText("Name");

        jLabel22.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel22.setText("Contact No.");

        txtFieldContact.setEditable(false);
        txtFieldContact.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        btnBack1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnBack1.setMnemonic('C');
        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(255, 255, 204));
        btnUpdate.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnUpdate.setMnemonic('C');
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtFieldName.setEditable(false);
        txtFieldName.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel4.setText("Package ID");

        lblPackageID.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblPackageID.setText("---");

        jLabel29.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel29.setText("Status");

        statusGroup.add(rbProcessing);
        rbProcessing.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rbProcessing.setText("Processing");

        statusGroup.add(rbOutForDelivery);
        rbOutForDelivery.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rbOutForDelivery.setText("Out for Delivery");

        statusGroup.add(rbDelivered);
        rbDelivered.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rbDelivered.setText("Delivered");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel17)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel15)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel4))
                                        .addGap(131, 131, 131)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtFieldHeight)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                    .addComponent(rbParcel)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(rbDocument))
                                                .addComponent(txtFieldWeight, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtFieldLength, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtFieldWidth, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(lblPackageID)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel18)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel29))
                                        .addGap(59, 59, 59)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(rbLand)
                                                .addGap(18, 18, 18)
                                                .addComponent(rbSea)
                                                .addGap(18, 18, 18)
                                                .addComponent(rbAir))
                                            .addComponent(lblOrderDate)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(rbProcessing)
                                                .addGap(18, 18, 18)
                                                .addComponent(rbOutForDelivery)
                                                .addGap(18, 18, 18)
                                                .addComponent(rbDelivered)))))))
                        .addContainerGap(346, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnBack1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFieldName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFieldContact, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel20))
                        .addGap(146, 146, 146))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtFieldAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel26)
                                            .addComponent(jLabel24)
                                            .addComponent(jLabel27)
                                            .addComponent(jLabel25)
                                            .addComponent(jLabel23))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(127, 127, 127)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtFieldState, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtFieldPostcode, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtFieldCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtFieldAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblPackageID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rbDocument)
                    .addComponent(rbParcel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFieldWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtFieldLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtFieldWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtFieldHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(lblOrderDate))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(rbSea)
                    .addComponent(rbLand)
                    .addComponent(rbAir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbOutForDelivery)
                        .addComponent(rbProcessing)
                        .addComponent(rbDelivered))
                    .addComponent(jLabel29))
                .addGap(21, 21, 21)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFieldAddress1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txtFieldAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txtFieldPostcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtFieldState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtFieldCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldContact)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack1)
                    .addComponent(btnUpdate))
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void ordersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordersTableMouseClicked
        clearFields();
        
        int i = ordersTable.getSelectedRow();
        Address address = null;
        if (!searched){
            address = listOfOrders.get(i).getShippingAddress();
        } else {
            address = searchedListOfOrders.get(i).getShippingAddress();
        }
        TableModel model = ordersTable.getModel();
        keyId = model.getValueAt(i,0).toString();
        lblPackageID.setText(model.getValueAt(i,0).toString());
        if (model.getValueAt(i,1).toString().equals("Parcel"))
            rbParcel.setSelected(true);
        else if (model.getValueAt(i,1).toString().equals("Document"))
            rbDocument.setSelected(true);
        txtFieldWeight.setText(model.getValueAt(i,2).toString());
        txtFieldLength.setText(model.getValueAt(i,3).toString());
        txtFieldWidth.setText(model.getValueAt(i,4).toString());
        txtFieldHeight.setText(model.getValueAt(i,5).toString());
        lblOrderDate.setText(model.getValueAt(i,6).toString());
        if (model.getValueAt(i,7).toString().equals("Land"))
            rbLand.setSelected(true);
        else if (model.getValueAt(i,7).toString().equals("Sea"))
            rbSea.setSelected(true);
        else if (model.getValueAt(i,7).toString().equals("Air"))
            rbAir.setSelected(true);
        if (address != null) {
            txtFieldAddress1.setText(address.getAddressLine1());
            txtFieldAddress2.setText(address.getAddressLine2());
            txtFieldPostcode.setText(address.getPostcode());
            txtFieldState.setText(address.getState());
            txtFieldCountry.setText(address.getCountry());
        }
        txtFieldName.setText(model.getValueAt(i,9).toString());
        txtFieldContact.setText(model.getValueAt(i,10).toString());
        if (model.getValueAt(i,11).toString().equals("Processing"))
            rbProcessing.setSelected(true);
        else if (model.getValueAt(i,11).toString().equals("Out For Delivery"))
            rbOutForDelivery.setSelected(true);
        else if (model.getValueAt(i,11).toString().equals("Delivered"))
            rbDelivered.setSelected(true);
        if (model.getValueAt(i,11).toString().equals("Cancelled") || model.getValueAt(i,11).toString().equals("Delivered")) {
            btnUpdate.setEnabled(false);
            rbProcessing.setEnabled(false);
            rbOutForDelivery.setEnabled(false);
            rbDelivered.setEnabled(false);
        } else {
            btnUpdate.setEnabled(true);
            rbProcessing.setEnabled(true);
            rbOutForDelivery.setEnabled(true);
            rbDelivered.setEnabled(true);
        }
        if (!searched){
            staffID = listOfOrders.get(i).getAssignedStaffID();
        } else {
            staffID = searchedListOfOrders.get(i).getAssignedStaffID();
        }
    }//GEN-LAST:event_ordersTableMouseClicked

    private void validateForm(){
        //1. Empty Text field Validation
        //run a for loop over each text field and check if one of they is blank
        for (JTextField textfield : textFields) { 
            if (textfield.getText().isBlank()) {
                textfield.requestFocus();
                JOptionPane.showMessageDialog(rootPane, "Please ensure that all fields are entered.");
                return;
            }
        }
        //2. validate package type
        if (rbParcel.isSelected() && !rbDocument.isSelected())
            packageType = "Parcel";
        else if (!rbParcel.isSelected() && rbDocument.isSelected())
            packageType = "Document";
        else {
            rbParcel.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Please choose a package type.");
            return;
        }
        //3. validate mode of transpoort
        if (rbLand.isSelected() && !rbSea.isSelected() && !rbAir.isSelected())
            modeOfTransportation = "Land";
        else if (!rbLand.isSelected() && rbSea.isSelected() && !rbAir.isSelected())
            modeOfTransportation = "Sea";
        else if (!rbLand.isSelected() && !rbSea.isSelected() && rbAir.isSelected())
            modeOfTransportation = "Air";
        else {
            rbParcel.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Please choose a mode of transportation.");
            return;
        }
        
        //4. validate if the entered value is a double or not
        try {
            weight = Double.parseDouble(txtFieldWeight.getText());
        } catch (NumberFormatException ex) {
           JOptionPane.showMessageDialog(rootPane, "Please enter digits only.");
           txtFieldWeight.requestFocus();
           return;
        }
        try {
            length = Double.parseDouble(txtFieldLength.getText());
        } catch (NumberFormatException ex) {
           JOptionPane.showMessageDialog(rootPane, "Please enter digits only.");
           txtFieldLength.requestFocus();
           return;
        }
        try {
            width = Double.parseDouble(txtFieldWidth.getText());
        } catch (NumberFormatException ex) {
           JOptionPane.showMessageDialog(rootPane, "Please enter digits only.");
           txtFieldWidth.requestFocus();
           return;
        }
        try {
            height = Double.parseDouble(txtFieldHeight.getText());
        } catch (NumberFormatException ex) {
           JOptionPane.showMessageDialog(rootPane, "Please enter digits only.");
           txtFieldHeight.requestFocus();
           return;
        }
        
        //3. validate status
        if (rbProcessing.isSelected() && !rbOutForDelivery.isSelected() && !rbDelivered.isSelected())
            status = "Processing";
        else if (!rbProcessing.isSelected() && rbOutForDelivery.isSelected() && !rbDelivered.isSelected())
            status = "Out For Delivery";
        else if (!rbProcessing.isSelected() && !rbOutForDelivery.isSelected() && rbDelivered.isSelected())
            status = "Delivered";
        else {
            rbParcel.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Please choose a mode of transportation.");
            return;
        }
    }
    
    private Order setupOrder(String packageId, String status){
        Address shippingAddress = new Address (txtFieldAddress1.getText(), txtFieldAddress2.getText(), txtFieldPostcode.getText(), txtFieldState.getText(), txtFieldCountry.getText());
        Date orderDate;
        try{
            orderDate = GlobalConfig.orderDateFormat.parse(lblOrderDate.getText());
        } catch (Exception ex){
            orderDate = null;
        }
        Order order = new Order(
                packageId, 
                packageType,
                weight,
                length,
                width,
                height,
                orderDate,
                modeOfTransportation,
                shippingAddress,
                txtFieldName.getText(),
                txtFieldContact.getText(),
                status,
                staffID
        );
        return order;
    }
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        validateForm();
        
        String packageId = keyId;
        
        File curFile = new File(GlobalConfig.dbPath + "Orders.txt");
        File newFile = new File(GlobalConfig.dbPath + "temp.txt");
        String row;
        try{
            FileWriter fw = new FileWriter(newFile, true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            Scanner sc = new Scanner(curFile);

            while(sc.hasNext())
            {
                row = sc.nextLine();
                String [] values = row.split("__");
                if(values[0].equals(packageId)){
                    Order order = setupOrder(packageId, status);
                    pw.println(order.toOneLineString());
                } else {
                    pw.println(row);
                }
            }
            sc.close(); //close scanner
            pw.flush(); 
            pw.close(); //close printwriter
            curFile.delete(); //delete current file
            File n = new File(GlobalConfig.dbPath + "Orders.txt");
            newFile.renameTo(n); //rename temp to use oldfile name
            JOptionPane.showMessageDialog(rootPane, "Order " + packageId + " details updated!", "Update Successful", JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex){
             JOptionPane.showMessageDialog(rootPane, ex.toString());
        }
        clearFields();
        showOrderList();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchFieldKeyReleased
        try{

            String[] columnNames = {
                "Package ID","Package Type","Weight (kg)","Length (cm)","Width (cm)","Height (cm)",
                "Order Date", "Mode of Transportation", "Shipping Address", "Owner", "Owner Contact No.", " Status"};
            DefaultTableModel model = (DefaultTableModel)ordersTable.getModel();
            model.setRowCount(0);
            ordersTable.revalidate();
            model.setColumnIdentifiers(columnNames);
            String keyword = txtSearchField.getText();
            searched = true;
            searchedListOfOrders = new ArrayList<Order>();
            String[] rowValues = new String[12];
            for (int i = 0; i < listOfOrders.size(); i++){
                rowValues[0] = listOfOrders.get(i).getPackageId();
                rowValues[1] = listOfOrders.get(i).getPackageType();
                rowValues[2] = String.format("%.2f",listOfOrders.get(i).getWeight());
                rowValues[3] = String.format("%.2f",listOfOrders.get(i).getLength());
                rowValues[4] = String.format("%.2f",listOfOrders.get(i).getWidth());
                rowValues[5] = String.format("%.2f",listOfOrders.get(i).getHeight());

                rowValues[6] = GlobalConfig.orderDateFormat.format(listOfOrders.get(i).getOrderDate());
                rowValues[7] = listOfOrders.get(i).getModeOfTransportation();
                rowValues[8] = listOfOrders.get(i).getShippingAddress().getFullAddress();

                rowValues[9] = listOfOrders.get(i).getOwner();
                rowValues[10] = listOfOrders.get(i).getOwnerContactNo();
                rowValues[11] = listOfOrders.get(i).getStatus();
                for (String value : rowValues) {
                    if (value.contains(keyword)) {
                        model.addRow(rowValues);
                        searchedListOfOrders.add(listOfOrders.get(i));
                        break;
                    }
                }
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, ex.toString());
        }
    }//GEN-LAST:event_txtSearchFieldKeyReleased

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        
    }//GEN-LAST:event_formWindowClosed
    private void clearFields(){ 
        //clears the textfields
        lblPackageID.setText("---");
        packageTypeGroup.clearSelection();
        txtFieldWeight.setText("");
        txtFieldLength.setText("");
        txtFieldWidth.setText("");
        txtFieldHeight.setText("");
        lblOrderDate.setText("---");
        modeGroup.clearSelection();
        txtFieldAddress1.setText("");
        txtFieldAddress2.setText("");
        txtFieldPostcode.setText("");
        txtFieldState.setText("");
        txtFieldCountry.setText("");
        txtFieldName.setText("");
        txtFieldContact.setText("");
        statusGroup.clearSelection();
        
        btnUpdate.setEnabled(false);
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliveryManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliveryManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliveryManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliveryManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblOrderDate;
    private javax.swing.JLabel lblPackageID;
    private javax.swing.ButtonGroup modeGroup;
    private javax.swing.JTable ordersTable;
    private javax.swing.ButtonGroup packageTypeGroup;
    private javax.swing.JRadioButton rbAir;
    private javax.swing.JRadioButton rbDelivered;
    private javax.swing.JRadioButton rbDocument;
    private javax.swing.JRadioButton rbLand;
    private javax.swing.JRadioButton rbOutForDelivery;
    private javax.swing.JRadioButton rbParcel;
    private javax.swing.JRadioButton rbProcessing;
    private javax.swing.JRadioButton rbSea;
    private javax.swing.ButtonGroup statusGroup;
    private javax.swing.JTextField txtFieldAddress1;
    private javax.swing.JTextField txtFieldAddress2;
    private javax.swing.JTextField txtFieldContact;
    private javax.swing.JTextField txtFieldCountry;
    private javax.swing.JTextField txtFieldHeight;
    private javax.swing.JTextField txtFieldLength;
    private javax.swing.JTextField txtFieldName;
    private javax.swing.JTextField txtFieldPostcode;
    private javax.swing.JTextField txtFieldState;
    private javax.swing.JTextField txtFieldWeight;
    private javax.swing.JTextField txtFieldWidth;
    private javax.swing.JTextField txtSearchField;
    // End of variables declaration//GEN-END:variables
}
