package couriersystem;

import couriersystem.model.GlobalConfig;
import couriersystem.model.LoggedInUser;
import couriersystem.model.ManagingStaff;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jeera
 */
public class DisplayManagingStaffProfile extends javax.swing.JFrame {

    private String id;
    private String gender;
    private String imgPath = "";
    private ArrayList<JTextField> textFields;
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
    /**
     * Creates new form AddStudentForm
     */
    public DisplayManagingStaffProfile(String id, boolean allowEdit) {
        initComponents();
        //Validation: Check permission
        if (!LoggedInUser.getInstance().getPermission().allowIndividualProfileManagement()) {
            this.dispose();
        }
        this.id = id;
        setTitle("Profile Information");
        if (allowEdit){
            txtName.setEditable(true);
            txtContact.setEditable(true);
            txtEmail.setEditable(true);
            rbMale.setEnabled(true);
            rbFemale.setEnabled(true);
            btnConfirm.setVisible(true);
            
            //Set the max selectable data for a DOB
            Date date = new Date();
            Calendar c = Calendar.getInstance();
            c.setTime(date);
            c.add(Calendar.YEAR, -17);
            date = c.getTime();
            dpDOB.setEnabled(true);
            //dpDOB.setMaxSelectableDate(date);
        } else {
            dpDOB.setEnabled(false);
            btnConfirm.setVisible(false);
            btnImage.setVisible(false);
        }
        try{
            
            File myFile = new File(GlobalConfig.dbPath + "ManagingStaff.txt");
            Scanner sc = new Scanner(myFile);
            String temp;
            
            while(sc.hasNext()){
                temp = sc.nextLine();
                String[] tempArr = temp.split(",");
                for(String s : tempArr){
                    System.out.println(s);
                }
                if (tempArr[0].equals(id)){
                    ManagingStaff managingStaff = new ManagingStaff(id,tempArr[1],tempArr[2],tempArr[3],tempArr[4],tempArr[5],tempArr[6]);
                    
                    // Display Profile Info
                    txtID.setText(managingStaff.getId());
                    txtName.setText(managingStaff.getName());
                    if (managingStaff.getGender().equals("Male")){
                        rbMale.setSelected(true);    
                    } else {
                        rbFemale.setSelected(true);    
                    }
                    try{
                        if (!managingStaff.getDateOfBirth().isBlank()){
                            Date dobb = dateFormat.parse(managingStaff.getDateOfBirth());
                            dpDOB.setDate(dobb);
                        }
                    } catch (Exception e){
                        dpDOB.setDate(null); 
                    }
                    txtContact.setText(managingStaff.getContactNo());
                    txtEmail.setText(managingStaff.getEmail());
                    imgPath = managingStaff.getImgUrl();
                    ImageIcon image = new ImageIcon(imgPath);
                    if (image != null) {
                        ImageIcon imageIcon = new ImageIcon(image.getImage().getScaledInstance(profileImg.getWidth(), profileImg.getHeight(), Image.SCALE_SMOOTH));
                        profileImg.setIcon(imageIcon);
                    } else {
                        profileImg.setVisible(false);
                    }
                }
            }
            sc.close();
        }
        catch(IOException ex){
            System.out.println(ex);
        }
        //need this array for validation if it is empty
        textFields = new ArrayList<JTextField>();
        textFields.add(txtName);
        textFields.add(txtContact);
        textFields.add(txtEmail);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        genderGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        rbFemale = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        profileImg = new javax.swing.JLabel();
        rbMale = new javax.swing.JRadioButton();
        btnBack = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        btnConfirm = new javax.swing.JButton();
        btnImage = new javax.swing.JButton();
        dpDOB = new com.toedter.calendar.JDateChooser();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel1.setText("ID");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setText("Contact Number");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel5.setText("Date Of Birth");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel2.setText("Name");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel6.setText("Email Address");

        genderGroup.add(rbFemale);
        rbFemale.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rbFemale.setText("Female");
        rbFemale.setEnabled(false);
        rbFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemaleActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setText("Gender");

        profileImg.setBackground(new java.awt.Color(0, 0, 0));
        profileImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        genderGroup.add(rbMale);
        rbMale.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rbMale.setText("Male");
        rbMale.setEnabled(false);
        rbMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMaleActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(204, 204, 204));
        btnBack.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnBack.setMnemonic('C');
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel12.setText("Managing Staff Information");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel12)
                .addContainerGap(130, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 29, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(19, 19, 19))
        );

        txtID.setEditable(false);
        txtID.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtName.setEditable(false);
        txtName.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });

        txtEmail.setEditable(false);
        txtEmail.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtContact.setEditable(false);
        txtContact.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContactKeyTyped(evt);
            }
        });

        btnConfirm.setBackground(new java.awt.Color(204, 255, 255));
        btnConfirm.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnConfirm.setMnemonic('C');
        btnConfirm.setText("Confirm Changes");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        btnImage.setBackground(new java.awt.Color(255, 255, 204));
        btnImage.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnImage.setMnemonic('C');
        btnImage.setText("Select Image");
        btnImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(106, 106, 106)
                        .addComponent(txtName))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail)
                            .addComponent(txtContact)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbMale)
                                .addGap(18, 18, 18)
                                .addComponent(rbFemale)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(dpDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(128, 128, 128)
                        .addComponent(txtID)))
                .addGap(38, 38, 38))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConfirm)
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(profileImg, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(btnImage)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profileImg, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImage)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rbFemale)
                    .addComponent(rbMale))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(dpDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnConfirm))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rbFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbFemaleActionPerformed

    private void rbMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMaleActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private boolean validateForm(){
        //1. Empty Text field Validation
        //run a for loop over each text field and check if one of they is blank
        for (JTextField textfield : textFields) { 
            if (textfield.getText().isBlank()) {
                textfield.requestFocus();
                JOptionPane.showMessageDialog(rootPane, "Please ensure that all fields are entered.");
                return false;
            }
        }
        //2. validate package type
        if (rbMale.isSelected() && !rbFemale.isSelected())
            gender = "Male";
        else if (!rbMale.isSelected() && rbFemale.isSelected())
            gender = "Female";
        else {
            rbMale.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Please select a gender.");
            return false;
        }
        //4. validate email
        if (!txtEmail.getText().contains("@")){
            JOptionPane.showMessageDialog(rootPane, "Please enter a valid email address.");
            return false;
        }
        
        return true;
    }
    
    private ManagingStaff setupProfile(){
        ManagingStaff profile = new ManagingStaff(
                id, 
                txtName.getText(),
                gender,
                dateFormat.format(dpDOB.getDate()),
                txtContact.getText(),
                txtEmail.getText(),
                imgPath
        );
        return profile;
    }
    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        if (validateForm() == false)
            return;
        
        File curFile = new File(GlobalConfig.dbPath + "ManagingStaff.txt");
        File newFile = new File(GlobalConfig.dbPath + "temp.txt");
        newFile.delete();
        newFile = new File(GlobalConfig.dbPath + "temp.txt");
        String row;
        try{
            FileWriter fw = new FileWriter(newFile, true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            Scanner sc = new Scanner(curFile);

            while(sc.hasNext())
            {
                row = sc.nextLine();
                String [] values = row.split(",");
                if(values[0].equals(id)){
                    ManagingStaff managingStaff = setupProfile();
                    pw.println(managingStaff.toOneLineString());
                } else {
                    pw.println(row);
                }
            }
            sc.close(); //close scanner
            pw.flush(); 
            pw.close(); //close printwriter
        }
        catch(Exception ex){
             JOptionPane.showMessageDialog(rootPane, ex.toString());
        }
        curFile.delete(); //delete current file
        File n = new File(GlobalConfig.dbPath + "ManagingStaff.txt");
        newFile.renameTo(n); //rename temp to use oldfile name
        JOptionPane.showMessageDialog(rootPane, "Profile updated!", "Successful", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImageActionPerformed
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.addChoosableFileFilter(new FileNameExtensionFilter("Image File", "jpg", "jpeg", "png"));
            chooser.setMultiSelectionEnabled(false);
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            if (f.getName().endsWith("jpg") || f.getName().endsWith("jpeg") || f.getName().endsWith("png")) {
                imgPath = f.getAbsolutePath();
                ImageIcon imageIcon = new ImageIcon(new ImageIcon(imgPath).getImage().getScaledInstance(profileImg.getWidth(), profileImg.getHeight(), Image.SCALE_SMOOTH));
                profileImg.setIcon(imageIcon);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please select an image file.");
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(rootPane, "No file selected.");
        }
    }//GEN-LAST:event_btnImageActionPerformed

    private void txtContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyTyped
        char c = evt.getKeyChar();
        // check the key pressed by user
        if(!((Character.isDigit(c))|| c == KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE )){           
            evt.consume(); // ignore the key
        }
    }//GEN-LAST:event_txtContactKeyTyped

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        char c = evt.getKeyChar();
        // check the key pressed by user
        if(((Character.isDigit(c))|| c == KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE )){           
            evt.consume(); // ignore the key
        }
    }//GEN-LAST:event_txtNameKeyTyped
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayManagingStaffProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayManagingStaffProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayManagingStaffProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayManagingStaffProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnImage;
    private com.toedter.calendar.JDateChooser dpDOB;
    private javax.swing.ButtonGroup genderGroup;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel profileImg;
    private javax.swing.JRadioButton rbFemale;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
