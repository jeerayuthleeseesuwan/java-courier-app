package couriersystem;


import couriersystem.model.Account;
import couriersystem.model.DeliveryStaff;
import couriersystem.model.Feedback;
import couriersystem.model.GlobalConfig;
import couriersystem.model.LoggedInUser;
import couriersystem.model.ManagingStaff;
import java.io.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jeera
 */
public class FeedbackManagement extends javax.swing.JFrame {


    private String keyId;
    private ArrayList<JTextField> textFields;
    private ArrayList<Feedback> listOfFeedbacks;
    private int rating;

    /**
     * Creates new form AddStudentForm
     */
    public FeedbackManagement() {
        initComponents();
        //Validation: Check permission
        if (!LoggedInUser.getInstance().getPermission().allowFeedbackManagement()) {
            this.dispose();
        }
        setTitle("Feedback Management");
        setVisible(true);
        showList();
        clearFields();
        
        //need this array for validation if it is empty
        textFields = new ArrayList<JTextField>();
        textFields.add(txtPackageID);
        textFields.add(txtFeedbackBy);
    }
     
    public void showList (){
        listOfFeedbacks = Feedback.getListOfFeedbacks();
        DefaultTableModel model =  (DefaultTableModel)feedbackTable.getModel();
        model.setRowCount(0);
        String[] rowValues = new String[5];
        for (int i = 0; i < listOfFeedbacks.size(); i++){
            rowValues[0] = listOfFeedbacks.get(i).getPackageId();
            rowValues[1] = Integer.toString(listOfFeedbacks.get(i).getRating());
            rowValues[2] = listOfFeedbacks.get(i).getComment();
            rowValues[3] = listOfFeedbacks.get(i).getFeedbackBy();
            rowValues[4] = GlobalConfig.feedbackDateFormat.format(listOfFeedbacks.get(i).getDate());
            model.addRow(rowValues);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ratingGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSearchField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        feedbackTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        rb1 = new javax.swing.JRadioButton();
        rb2 = new javax.swing.JRadioButton();
        btnBack = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtPackageID = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAreaComment = new javax.swing.JTextArea();
        rb4 = new javax.swing.JRadioButton();
        rb3 = new javax.swing.JRadioButton();
        rb5 = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        txtFeedbackBy = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel9.setText("Feedback");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Feedback.png"))); // NOI18N
        jLabel3.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel3.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel3.setPreferredSize(new java.awt.Dimension(60, 60));

        txtSearchField.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchFieldKeyReleased(evt);
            }
        });

        feedbackTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Package ID", "Rating", "Comment", "FeedbackBy", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        feedbackTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feedbackTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(feedbackTable);

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel8.setText("Feedback Form");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel4.setText("Package ID");

        jLabel14.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel14.setText("Rating");

        ratingGroup.add(rb1);
        rb1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rb1.setText("1");
        rb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb1ActionPerformed(evt);
            }
        });

        ratingGroup.add(rb2);
        rb2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rb2.setText("2");

        btnBack.setBackground(new java.awt.Color(204, 204, 204));
        btnBack.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(204, 255, 255));
        btnCreate.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnCreate.setText("Submit Feedback");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(255, 255, 204));
        btnClear.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel5.setText("Comment");

        txtPackageID.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtPackageID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPackageIDKeyReleased(evt);
            }
        });

        txtAreaComment.setColumns(20);
        txtAreaComment.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtAreaComment.setRows(5);
        jScrollPane4.setViewportView(txtAreaComment);

        ratingGroup.add(rb4);
        rb4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rb4.setText("4");

        ratingGroup.add(rb3);
        rb3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rb3.setText("3");
        rb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb3ActionPerformed(evt);
            }
        });

        ratingGroup.add(rb5);
        rb5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rb5.setText("5");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel6.setText("Feedback by");

        txtFeedbackBy.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtFeedbackBy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFeedbackByKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel7.setText("Date");

        lblDate.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDate.setText("---");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(107, 107, 107)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPackageID, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(rb1)
                                                .addGap(18, 18, 18)
                                                .addComponent(rb2)
                                                .addGap(18, 18, 18)
                                                .addComponent(rb3)
                                                .addGap(18, 18, 18)
                                                .addComponent(rb4)
                                                .addGap(18, 18, 18)
                                                .addComponent(rb5)))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(jScrollPane4)
                                        .addGap(22, 22, 22))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(95, 95, 95)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(lblDate)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(txtFeedbackBy)
                                        .addGap(22, 22, 22))))))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel8)
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPackageID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(rb2)
                    .addComponent(rb1)
                    .addComponent(rb4)
                    .addComponent(rb3)
                    .addComponent(rb5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtFeedbackBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnCreate)
                    .addComponent(btnClear))
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel10.setText("Search");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean validateForm(){
        //1. Empty Text field Validation
        //run a for loop over each text field and check if one of they is blank
        for (JTextField textfield : textFields) { 
            if (textfield.getText().isBlank()) {
                textfield.requestFocus();
                JOptionPane.showMessageDialog(rootPane, "Please ensure that all fields are entered.");
                return false;
            }
        }
        //2. validate package type
        if (rb1.isSelected())
            rating = 1;
        else if (rb2.isSelected())
            rating = 2;
        else if (rb3.isSelected())
            rating = 3;
        else if (rb4.isSelected())
            rating = 4;
        else if (rb5.isSelected())
            rating = 5;
        else {
            rb1.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Please select a rating.");
            return false;
        }
        
        //3. validate if package ID exists
        try{
            File myFile = new File(GlobalConfig.dbPath + "Orders.txt");
            Scanner sc = new Scanner(myFile);
            String temp;
            while(sc.hasNext()){
                temp = sc.nextLine();
                String []tempArr = temp.split("__");
                if (tempArr[0].equals(txtPackageID.getText())){
                    return true;
                }
            }
            sc.close();
        }
        catch(FileNotFoundException | NumberFormatException ex){
            JOptionPane.showMessageDialog(rootPane,ex.toString()); 
            return false;
        }
        JOptionPane.showMessageDialog(rootPane, "This package ID does not exist");
        return false;
        
    }
    
    private Feedback setupFeedback(String id ){
        Feedback feedback = new Feedback(
                id, 
                txtPackageID.getText(),
                rating,
                txtAreaComment.getText(),
                txtFeedbackBy.getText(),
                new Date() //set current date time upon submission
        );
        return feedback;
    }
    
    private void txtSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchFieldKeyReleased
        try{

            String[] columnNames = {"Package ID","Rating","Comment","Feedback By", "Date"};
            DefaultTableModel model = (DefaultTableModel)feedbackTable.getModel();
            model.setRowCount(0);
            feedbackTable.revalidate();
            model.setColumnIdentifiers(columnNames);
            String keyword = txtSearchField.getText();
            
            String[] rowValues = new String[5];
            for (int i = 0; i < listOfFeedbacks.size(); i++){
                rowValues[0] = listOfFeedbacks.get(i).getPackageId();
                rowValues[1] = Integer.toString(listOfFeedbacks.get(i).getRating());
                rowValues[2] = listOfFeedbacks.get(i).getComment();
                rowValues[3] = listOfFeedbacks.get(i).getFeedbackBy();
                rowValues[4] = GlobalConfig.feedbackDateFormat.format(listOfFeedbacks.get(i).getDate());
                for (String value : rowValues) {
                    if (value.contains(keyword)) {
                        model.addRow(rowValues);
                        break;
                    }
                }
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, ex.toString());
        }
    }//GEN-LAST:event_txtSearchFieldKeyReleased

    private void feedbackTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackTableMouseClicked
        //When click on a record in the table
        clearFields();

        int i = feedbackTable.getSelectedRow();
        TableModel model = feedbackTable.getModel();
        keyId = model.getValueAt(i,0).toString();
        txtPackageID.setText(model.getValueAt(i,0).toString());
        if(model.getValueAt(i,1).toString().equals("1")) {
            rb1.setSelected(true);
        } else if(model.getValueAt(i,1).toString().equals("2")) {
            rb2.setSelected(true);
        } else if(model.getValueAt(i,1).toString().equals("3")) {
            rb3.setSelected(true);
        } else if(model.getValueAt(i,1).toString().equals("4")) {
            rb4.setSelected(true);
        } else if(model.getValueAt(i,1).toString().equals("5")) {
            rb5.setSelected(true);
        }
        txtAreaComment.setText(model.getValueAt(i,2).toString());
        txtFeedbackBy.setText(model.getValueAt(i,3).toString());
        lblDate.setText(model.getValueAt(i,4).toString());
        
        //Set all to read only
        for (JTextField textfield : textFields) {
            textfield.setEditable(false);
        }
        txtAreaComment.setEditable(false);
        rb1.setEnabled(false);
        rb2.setEnabled(false);
        rb3.setEnabled(false);
        rb4.setEnabled(false);
        rb5.setEnabled(false);
        btnCreate.setVisible(false);

    }//GEN-LAST:event_feedbackTableMouseClicked

    private void rb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb1ActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearFields();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        if (validateForm() == false)
            return;
        
        String id = "";
        
        File curFile = new File(GlobalConfig.dbPath + "ID_Tracker.txt");
        File newFile = new File(GlobalConfig.dbPath + "temp.txt");
        String temp;
        try{
            FileWriter fw = new FileWriter(newFile, true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            Scanner sc = new Scanner(curFile);

            while(sc.hasNext())
            {
               temp = sc.nextLine();
               String [] tempArr = temp.split(",");
               if (tempArr[0].equals("Feedback")){
                   // generate account id
                   int numberOfDigits = tempArr[1].length();
                    String generated = "F";
                    for(int i = 0; i < 5 - numberOfDigits; i++)
                        generated += "0";
                    generated += tempArr[1]; 

                    //Edit the txt file
                    int currentNum = Integer.parseInt(tempArr[1]);
                    currentNum += 1;
                    pw.println("Feedback," + Integer.toString(currentNum));

                    //return the generated id
                    id = generated;
               } else {
                   pw.println(temp);
               }
            }
            sc.close(); //close scanner
            pw.flush(); 
            pw.close(); //close printwriter
            curFile.delete(); //delete current file
            File n = new File(GlobalConfig.dbPath + "ID_Tracker.txt");
            newFile.renameTo(n);
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, ex.toString());
        }
        
        //Create Account
        try{
            //Create a new instance of Feedback class with the inputs
            Feedback feedback = setupFeedback(id);
            
            //Write to File
            FileWriter myFile = new FileWriter(GlobalConfig.dbPath + "Feedback.txt",true);
            PrintWriter pw = new PrintWriter(myFile);
            pw.println(feedback.toOneLineString());
            pw.close();
            
            //Show Message Box
            JOptionPane.showMessageDialog(rootPane, "Feedback for order " + txtPackageID.getText() + " submitted." , "Successful", JOptionPane.INFORMATION_MESSAGE);
         }
        catch (IOException ex){
            JOptionPane.showMessageDialog(rootPane, ex.toString());
        }
        clearFields();  
        showList();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void txtPackageIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPackageIDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPackageIDKeyReleased

    private void rb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb3ActionPerformed

    private void txtFeedbackByKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFeedbackByKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFeedbackByKeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        
    }//GEN-LAST:event_formWindowClosed
    private void clearFields(){ 
        //clears the textfields
        txtPackageID.setText("");
        ratingGroup.clearSelection();
        if (textFields != null){
            for (JTextField textfield : textFields) { 
                textfield.setEditable(true);
            }
        }
        txtAreaComment.setText("");
        txtFeedbackBy.setText("");
        lblDate.setText("--");
        
        //Set all to editable
        txtAreaComment.setEditable(true);
        rb1.setEnabled(true);
        rb2.setEnabled(true);
        rb3.setEnabled(true);
        rb4.setEnabled(true);
        rb5.setEnabled(true);
        
        btnCreate.setVisible(true);
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FeedbackManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FeedbackManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FeedbackManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FeedbackManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreate;
    private javax.swing.JTable feedbackTable;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblDate;
    private javax.swing.ButtonGroup ratingGroup;
    private javax.swing.JRadioButton rb1;
    private javax.swing.JRadioButton rb2;
    private javax.swing.JRadioButton rb3;
    private javax.swing.JRadioButton rb4;
    private javax.swing.JRadioButton rb5;
    private javax.swing.JTextArea txtAreaComment;
    private javax.swing.JTextField txtFeedbackBy;
    private javax.swing.JTextField txtPackageID;
    private javax.swing.JTextField txtSearchField;
    // End of variables declaration//GEN-END:variables
}
